import baca


def test_baca_rhythm_W_measures_01():

    W = baca.rhythm.W((10, 8), (3, 3, 6, 10), 1)

    assert W.measures == (([3, 3, 4],), ([2, 6],), ([4, 3, 3],), ([6, 2],), ([8, 2],), ([1, 3, 4],), ([2, 8],), ([2, 3, 3],), ([6, 4],), ([6, 2],), ([1, 3, 6],), ([8],), ([2, 3, 3, 2],), ([4, 4],), ([6, 3, 1],), ([2, 6],), ([10],), ([3, 3, 2],), ([4, 6],), ([4, 3, 1],), ([2, 6, 2],), ([8],))

    W = baca.rhythm.W((10, 8), (3, 3, 6, 10), 2)

    assert W.measures == (([3, 3, 4], [2, 8]), ([2, 3, 3], [6, 2]), ([8, 2], [1, 3, 6]), ([8], [2, 3, 3]), ([6, 4], [6, 3, 1]), ([2, 6], [8]), ([2, 3, 3, 2], [4, 6]), ([4, 3, 1], [2, 6]), ([10], [3, 3, 4]), ([2, 6], [4, 3, 1]), ([2, 6, 2], [8, 2]), ([1, 3, 4], [2, 6]), ([4, 3, 3], [6, 4]), ([6, 2], [1, 3, 4]), ([2, 8], [2, 3, 3, 2]), ([4, 4], [6, 2]), ([1, 3, 6], [10]), ([3, 3, 2], [4, 4]), ([6, 3, 1], [2, 6, 2]), ([8], [3, 3, 2]), ([4, 6], [4, 3, 3]), ([6, 2], [8]))

    W = baca.rhythm.W((10, 8), (3, 3, 6, 10), 3)

    assert W.measures == (([3, 3, 4], [2, 8], [2, 3, 3, 2]), ([4, 4], [6, 2], [1, 3, 4]), ([2, 8], [2, 3, 3, 2], [4, 6]), ([4, 3, 1], [2, 6], [8]), ([2, 3, 3, 2], [4, 6], [4, 3, 3]), ([6, 2], [8], [3, 3, 2]), ([4, 6], [4, 3, 3], [6, 4]), ([6, 2], [1, 3, 4], [2, 6]), ([4, 3, 3], [6, 4], [6, 3, 1]), ([2, 6], [8], [2, 3, 3]), ([6, 4], [6, 3, 1], [2, 6, 2]), ([8], [3, 3, 2], [4, 4]), ([6, 3, 1], [2, 6, 2], [8, 2]), ([1, 3, 4], [2, 6], [4, 3, 1]), ([2, 6, 2], [8, 2], [1, 3, 6]), ([8], [2, 3, 3], [6, 2]), ([8, 2], [1, 3, 6], [10]), ([3, 3, 2], [4, 4], [6, 2]), ([1, 3, 6], [10], [3, 3, 4]), ([2, 6], [4, 3, 1], [2, 6]), ([10], [3, 3, 4], [2, 8]), ([2, 3, 3], [6, 2], [8]))

    W = baca.rhythm.W((10, 8), (3, 3, 6, 10), 4)

    assert W.measures == (([3, 3, 4], [2, 8], [2, 3, 3, 2], [4, 6]), ([4, 3, 1], [2, 6], [8], [2, 3, 3]), ([6, 4], [6, 3, 1], [2, 6, 2], [8, 2]), ([1, 3, 4], [2, 6], [4, 3, 1], [2, 6]), ([10], [3, 3, 4], [2, 8], [2, 3, 3, 2]), ([4, 4], [6, 2], [1, 3, 4], [2, 6]), ([4, 3, 3], [6, 4], [6, 3, 1], [2, 6, 2]), ([8], [3, 3, 2], [4, 4], [6, 2]), ([1, 3, 6], [10], [3, 3, 4], [2, 8]), ([2, 3, 3], [6, 2], [8], [3, 3, 2]), ([4, 6], [4, 3, 3], [6, 4], [6, 3, 1]), ([2, 6], [8], [2, 3, 3], [6, 2]), ([8, 2], [1, 3, 6], [10], [3, 3, 4]), ([2, 6], [4, 3, 1], [2, 6], [8]), ([2, 3, 3, 2], [4, 6], [4, 3, 3], [6, 4]), ([6, 2], [1, 3, 4], [2, 6], [4, 3, 1]), ([2, 6, 2], [8, 2], [1, 3, 6], [10]), ([3, 3, 2], [4, 4], [6, 2], [1, 3, 4]), ([2, 8], [2, 3, 3, 2], [4, 6], [4, 3, 3]), ([6, 2], [8], [3, 3, 2], [4, 4]), ([6, 3, 1], [2, 6, 2], [8, 2], [1, 3, 6]), ([8], [2, 3, 3], [6, 2], [8]))
